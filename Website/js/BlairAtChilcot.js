$(document).ready(function() {
    LoadData();
    ShowData();
});

var _speeches;

function ShowData() {
    
    var width, height, max0, max1, idx, elt, paper, s, x, midy, toti, totwe;
    var colwidth = 3, colheight;
    width = _speeches.length * colwidth;
    height = 400;
    paper = Raphael("notepad", width, height);
    midy = height / 2;
    elt = paper.path(MakePathString(0, midy, width, midy));

    max0 = max1 = toti = totwe = 0;
    for (idx = 0; idx < _speeches.length; idx++) {
        s = _speeches[idx];
        if (s[0] > max0)
            max0 = s[0];
        if (s[1] > max1)
            max1 = s[1];
        if (s[2] > max1)
            max1 = s[2];
        toti += s[1];
        totwe += s[2];    
    }
    x = 1;
    for (idx = 0; idx < _speeches.length; idx++) {
        s = _speeches[idx];
        colheight = Math.round( ( 1.0 * s[0] * midy ) / max0 );
        elt = paper.path(MakePathString(x, midy, x, colheight + midy));
        elt.attr("stroke-width", colwidth - 1);
        if (s[0] == max0)
            elt = paper.text(x, colheight + midy - 10, s[0] + " words");

        if (s[1] > 0) {
            colheight = Math.round((1.0 * s[1] * midy) / max1);
            elt = paper.path(MakePathString(x, midy - colheight, x, midy));
            elt.attr("stroke-width", colwidth - 1);
            if (s[1] == max1)
                elt = paper.text(x, midy - colheight + 10, "Said 'I'\n" + s[1] + " times");
        }
        if (s[2] > 0) {
            colheight = Math.round((1.0 * s[2] * midy) / max1);
            elt = paper.path(MakePathString(x - 2, midy - colheight, x + colwidth - 1, midy - colheight));
            elt.attr("stroke-width", colwidth - 1);
            elt.attr("stroke", "#ff0000");
        }                    
        x += colwidth;
    }
    $("#SpeechCount").text(_speeches.length);
    $("#TotI").text(toti);
    $("#TotWe").text(totwe);
}


function MakePathString( x0, y0, x1, y1) {
    return "M" + x0 + " " + y0 + "L" + x1 + " " + y1;    
}

function LoadData() {
    _speeches = new Array();
	AddSpeech(2,0,0);
	AddSpeech(124,1,2);
	AddSpeech(75,2,2);
	AddSpeech(124,6,4);
	AddSpeech(104,2,2);
	AddSpeech(7,0,0);
	AddSpeech(80,1,0);
	AddSpeech(322,3,3);
	AddSpeech(86,4,2);
	AddSpeech(149,4,2);
	AddSpeech(77,4,1);
	AddSpeech(10,1,0);
	AddSpeech(405,9,4);
	AddSpeech(324,9,4);
	AddSpeech(145,3,3);
	AddSpeech(173,8,6);
	AddSpeech(53,3,3);
	AddSpeech(26,2,0);
	AddSpeech(18,0,0);
	AddSpeech(35,1,1);
	AddSpeech(9,0,1);
	AddSpeech(299,3,8);
	AddSpeech(106,2,2);
	AddSpeech(44,3,0);
	AddSpeech(8,0,0);
	AddSpeech(158,4,1);
	AddSpeech(8,0,0);
	AddSpeech(589,21,8);
	AddSpeech(48,1,0);
	AddSpeech(9,0,0);
	AddSpeech(5,0,0);
	AddSpeech(14,0,0);
	AddSpeech(113,4,0);
	AddSpeech(14,0,0);
	AddSpeech(268,7,5);
	AddSpeech(173,9,5);
	AddSpeech(15,0,2);
	AddSpeech(74,4,1);
	AddSpeech(148,2,6);
	AddSpeech(114,3,2);
	AddSpeech(105,3,1);
	AddSpeech(3,0,0);
	AddSpeech(27,1,0);
	AddSpeech(147,5,4);
	AddSpeech(184,7,2);
	AddSpeech(57,0,1);
	AddSpeech(271,10,4);
	AddSpeech(4,0,0);
	AddSpeech(21,2,0);
	AddSpeech(12,0,0);
	AddSpeech(124,3,5);
	AddSpeech(350,15,6);
	AddSpeech(58,3,2);
	AddSpeech(153,4,3);
	AddSpeech(10,1,0);
	AddSpeech(141,8,3);
	AddSpeech(184,6,6);
	AddSpeech(9,0,0);
	AddSpeech(181,5,2);
	AddSpeech(35,1,1);
	AddSpeech(46,1,1);
	AddSpeech(43,1,1);
	AddSpeech(19,0,1);
	AddSpeech(273,19,2);
	AddSpeech(125,12,1);
	AddSpeech(72,1,2);
	AddSpeech(131,8,3);
	AddSpeech(187,6,3);
	AddSpeech(15,1,0);
	AddSpeech(233,7,3);
	AddSpeech(8,1,0);
	AddSpeech(51,0,1);
	AddSpeech(76,2,0);
	AddSpeech(102,7,1);
	AddSpeech(49,1,1);
	AddSpeech(148,7,2);
	AddSpeech(135,2,5);
	AddSpeech(1,0,0);
	AddSpeech(32,1,0);
	AddSpeech(180,6,1);
	AddSpeech(2,0,0);
	AddSpeech(236,6,1);
	AddSpeech(89,2,1);
	AddSpeech(328,10,9);
	AddSpeech(122,2,2);
	AddSpeech(47,3,1);
	AddSpeech(115,3,1);
	AddSpeech(18,2,0);
	AddSpeech(132,2,3);
	AddSpeech(58,1,2);
	AddSpeech(83,0,3);
	AddSpeech(43,1,0);
	AddSpeech(138,2,1);
	AddSpeech(4,0,0);
	AddSpeech(18,0,0);
	AddSpeech(143,4,3);
	AddSpeech(34,6,0);
	AddSpeech(35,0,0);
	AddSpeech(36,0,2);
	AddSpeech(148,9,1);
	AddSpeech(25,1,0);
	AddSpeech(354,20,2);
	AddSpeech(154,4,3);
	AddSpeech(189,7,2);
	AddSpeech(220,4,4);
	AddSpeech(188,3,3);
	AddSpeech(149,4,2);
	AddSpeech(42,0,0);
	AddSpeech(30,0,1);
	AddSpeech(97,1,0);
	AddSpeech(46,2,0);
	AddSpeech(219,8,2);
	AddSpeech(72,0,2);
	AddSpeech(34,2,0);
	AddSpeech(15,0,0);
	AddSpeech(213,5,6);
	AddSpeech(185,3,5);
	AddSpeech(153,1,1);
	AddSpeech(53,1,1);
	AddSpeech(2,0,0);
	AddSpeech(35,1,0);
	AddSpeech(163,0,4);
	AddSpeech(15,0,0);
	AddSpeech(97,2,3);
	AddSpeech(98,1,1);
	AddSpeech(42,0,1);
	AddSpeech(20,0,0);
	AddSpeech(2,0,0);
	AddSpeech(12,0,0);
	AddSpeech(135,4,1);
	AddSpeech(97,1,5);
	AddSpeech(255,7,5);
	AddSpeech(119,2,1);
	AddSpeech(14,0,0);
	AddSpeech(144,0,2);
	AddSpeech(23,2,0);
	AddSpeech(71,0,0);
	AddSpeech(42,2,0);
	AddSpeech(1,0,0);
	AddSpeech(71,3,3);
	AddSpeech(85,3,0);
	AddSpeech(121,6,2);
	AddSpeech(1,0,0);
	AddSpeech(141,3,0);
	AddSpeech(60,0,0);
	AddSpeech(7,1,0);
	AddSpeech(4,0,0);
	AddSpeech(166,2,5);
	AddSpeech(89,2,1);
	AddSpeech(275,4,3);
	AddSpeech(169,6,5);
	AddSpeech(223,6,6);
	AddSpeech(131,4,3);
	AddSpeech(163,2,2);
	AddSpeech(159,4,2);
	AddSpeech(29,2,0);
	AddSpeech(122,3,3);
	AddSpeech(117,3,3);
	AddSpeech(66,2,0);
	AddSpeech(120,2,1);
	AddSpeech(220,7,1);
	AddSpeech(142,5,2);
	AddSpeech(25,1,0);
	AddSpeech(86,3,2);
	AddSpeech(72,6,1);
	AddSpeech(39,1,2);
	AddSpeech(30,1,0);
	AddSpeech(102,5,0);
	AddSpeech(5,0,0);
	AddSpeech(275,11,6);
	AddSpeech(1,0,0);
	AddSpeech(7,1,0);
	AddSpeech(110,2,3);
	AddSpeech(133,2,6);
	AddSpeech(9,2,0);
	AddSpeech(8,0,0);
	AddSpeech(78,1,5);
	AddSpeech(64,4,4);
	AddSpeech(3,0,0);
	AddSpeech(129,2,5);
	AddSpeech(131,0,0);
	AddSpeech(98,3,6);
	AddSpeech(33,0,0);
	AddSpeech(21,3,0);
	AddSpeech(34,3,0);
	AddSpeech(35,1,0);
	AddSpeech(138,3,5);
	AddSpeech(156,1,2);
	AddSpeech(34,0,2);
	AddSpeech(84,2,1);
	AddSpeech(83,0,3);
	AddSpeech(36,1,0);
	AddSpeech(20,0,0);
	AddSpeech(17,0,0);
	AddSpeech(82,4,1);
	AddSpeech(156,2,4);
	AddSpeech(93,4,0);
	AddSpeech(17,0,0);
	AddSpeech(6,0,1);
	AddSpeech(24,0,1);
	AddSpeech(55,3,1);
	AddSpeech(30,0,0);
	AddSpeech(30,4,0);
	AddSpeech(41,1,0);
	AddSpeech(101,2,0);
	AddSpeech(32,0,0);
	AddSpeech(168,7,0);
	AddSpeech(99,3,5);
	AddSpeech(70,0,0);
	AddSpeech(166,4,7);
	AddSpeech(128,3,0);
	AddSpeech(28,2,0);
	AddSpeech(54,1,0);
	AddSpeech(153,7,2);
	AddSpeech(51,4,0);
	AddSpeech(10,0,2);
	AddSpeech(117,1,3);
	AddSpeech(200,4,10);
	AddSpeech(19,1,0);
	AddSpeech(131,2,8);
	AddSpeech(262,5,9);
	AddSpeech(81,2,5);
	AddSpeech(100,1,2);
	AddSpeech(23,0,2);
	AddSpeech(44,1,4);
	AddSpeech(116,5,5);
	AddSpeech(112,6,7);
	AddSpeech(29,0,2);
	AddSpeech(24,0,1);
	AddSpeech(44,3,0);
	AddSpeech(97,5,0);
	AddSpeech(1,0,0);
	AddSpeech(112,0,1);
	AddSpeech(51,3,0);
	AddSpeech(77,2,5);
	AddSpeech(103,4,3);
	AddSpeech(20,1,0);
	AddSpeech(207,6,7);
	AddSpeech(123,1,5);
	AddSpeech(4,1,0);
	AddSpeech(87,1,2);
	AddSpeech(256,7,6);
	AddSpeech(26,1,2);
	AddSpeech(112,2,4);
	AddSpeech(238,6,5);
	AddSpeech(229,12,5);
	AddSpeech(62,7,0);
	AddSpeech(82,4,2);
	AddSpeech(223,9,8);
	AddSpeech(294,4,7);
	AddSpeech(268,3,1);
	AddSpeech(213,5,2);
	AddSpeech(109,2,1);
	AddSpeech(353,8,8);
	AddSpeech(91,6,1);
	AddSpeech(63,3,0);
	AddSpeech(103,5,1);
	AddSpeech(12,1,0);
	AddSpeech(24,1,0);
	AddSpeech(27,1,1);
	AddSpeech(86,5,0);
	AddSpeech(77,3,0);
	AddSpeech(86,0,2);
	AddSpeech(96,5,0);
	AddSpeech(160,1,3);
	AddSpeech(53,5,0);
	AddSpeech(300,7,9);
	AddSpeech(213,9,7);
	AddSpeech(196,3,3);
	AddSpeech(8,0,0);
	AddSpeech(56,4,0);
	AddSpeech(28,0,0);
	AddSpeech(300,5,11);
	AddSpeech(79,2,2);
	AddSpeech(12,1,0);
	AddSpeech(123,2,1);
	AddSpeech(276,2,7);
	AddSpeech(8,1,0);
	AddSpeech(7,0,0);
	AddSpeech(263,5,10);
	AddSpeech(326,5,11);
	AddSpeech(18,2,0);
	AddSpeech(232,3,11);
	AddSpeech(44,1,1);
	AddSpeech(61,2,2);
	AddSpeech(111,1,3);
	AddSpeech(179,4,6);
	AddSpeech(13,3,1);
	AddSpeech(141,4,1);
	AddSpeech(139,6,0);
	AddSpeech(174,8,2);
	AddSpeech(180,7,1);
	AddSpeech(92,4,0);
	AddSpeech(29,1,0);
	AddSpeech(15,0,0);
	AddSpeech(92,4,1);
	AddSpeech(118,5,3);
	AddSpeech(130,4,4);
	AddSpeech(172,3,4);
	AddSpeech(124,5,3);
	AddSpeech(142,6,5);
	AddSpeech(104,3,1);
	AddSpeech(218,3,2);
	AddSpeech(60,3,4);
	AddSpeech(134,4,2);
	AddSpeech(489,9,4);
	AddSpeech(369,20,7);
	AddSpeech(185,6,4);
	AddSpeech(1,0,0);
}

function AddSpeech(tcount, icount, wecount) {
    _speeches[_speeches.length] = new Array(tcount, icount, wecount);
}
